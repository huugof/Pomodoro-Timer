/* CSS Variables */
:root {
    /* Base colors */
    --white: #FFFFFF;
    --blue-50: #93c5fd;
    --blue-600: #2563eb;
    --blue-700: #1d4ed8;
    --blue-900: #1e3a8a;
    --red-600: #DC2626;
    --red-700: #B91C1C;
    
    /* Work mode */
    --primary-color: var(--blue-600);
    --primary-hover: var(--blue-900);
    --danger-color: var(--red-600);
    --danger-hover: var(--red-700);
    --background: var(--white);
    --surface: var(--white);
    --text-primary: var(--blue-900);
    --text-secondary: var(--blue-600);

    /* Break mode */
    --break-background: var(--blue-900);
    --break-text: rgba(255, 255, 255, 0.8);
    --break-surface: rgba(255, 255, 255, 0.4);
    --break-surface-hover: rgba(255, 255, 255, 1);
    --break-ring-bg: rgba(255, 255, 255, 0.1);
}

/* Reset and Base Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', sans-serif;
    background-color: var(--background);
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Layout */
.container {
    padding: 2rem;
    width: 100%;
    max-width: 480px;
    text-align: center;
}

/* Timer Display */
.timer-container {
    position: relative;
    margin: 2rem auto;
    width: 300px;
    height: 300px;
}

.progress-ring {
    position: relative;
    width: 100%;
    height: 100%;
}

.progress-ring circle {
    fill: none;
    stroke-width: 8;
}

.progress-ring-bg {
    stroke: #E5E7EB;
}

.progress-ring-circle {
    stroke: var(--primary-color);
    stroke-linecap: round;
    transition: stroke-dashoffset 0.35s;
    transform: rotate(-90deg);
    transform-origin: 50% 50%;
}

.timer-display {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.time {
    font-size: 3.5rem;
    font-weight: 600;
    color: var(--primary-color);
    margin-top: -0.25rem;
}

/* Controls Layout */
.controls {
    margin-top: 2rem;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    align-items: center;
}

.primary-controls {
    display: flex;
    gap: 1rem;
    align-items: center;
}

/* Button Base Styles */
.circle-button {
    width: 64px;
    height: 64px;
    border-radius: 50%;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--surface);
    color: var(--primary-color);
    box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.1), 
                0px 2px 4px rgba(0, 0, 0, 0.15);
    transition: all 0.2s ease;
}

.circle-button svg {
    fill: currentColor;
}

/* Button Variants */
.circle-button.primary {
    background: var(--primary-color);
    color: var(--white);
}

/* Mode Switch Button */
.mode-switch {
    position: absolute;
    top: -1rem;
    right: -1rem;
    width: 40px;
    height: 40px;
    padding: 8px;
    z-index: 1;
}

.mode-switch .break-icon {
    display: none;
}

/* Break Mode Styles */
.break-mode {
    background-color: var(--break-background);
}

.break-mode .container {
    background-color: transparent;
}

.break-mode .time {
    color: var(--break-text);
}

.break-mode .progress-ring-bg {
    stroke: var(--break-ring-bg);
}

.break-mode .progress-ring-circle {
    stroke: var(--break-text);
}

.break-mode .circle-button {
    background-color: var(--break-surface);
    color: var(--break-background);
    /* Standardized shadow for break mode */
    box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.25), 
                0px 2px 4px rgba(0, 0, 0, 0.25);
}

.break-mode .mode-switch .focus-icon {
    display: none;
}

.break-mode .mode-switch .break-icon {
    display: block;
}

/* Desktop Hover States */
@media (hover: hover) {
    .circle-button:hover {
        /* transform: translateY(-1px); */
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.15), 
                    0px 3px 6px rgba(0, 0, 0, 0.2);
    }

    .circle-button.primary:hover {
        background: var(--primary-hover);
    }

    .break-mode .circle-button:hover {
        background-color: var(--break-surface-hover);
        /* Standardized hover shadow for break mode */
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.25), 
                    0px 3px 6px rgba(0, 0, 0, 0.25);
    }

    /* Preserve start button background in break mode */
    .break-mode #start {
        background-color: rgba(255, 255, 255, 0.8);
    }

    .break-mode #start:hover {
        background-color: var(--break-surface-hover);
    }

    /* Add new hover state for add-time button in work mode */
    body:not(.break-mode) #add-time:hover {
        background: var(--primary-color);
        color: var(--white);
    }

    /* Ensure break mode maintains white hover */
    .break-mode #add-time:hover {
        background-color: var(--break-surface-hover);
    }

    /* Add hover state for reset button in work mode */
    body:not(.break-mode) #reset:hover {
        background: var(--primary-color);
        color: var(--white);
    }

    /* Ensure break mode maintains white hover */
    .break-mode #reset:hover {
        background-color: var(--break-surface-hover);
    }
}

/* Mobile/Touch Device Styles */
@media (hover: none) and (pointer: coarse) {
    .circle-button {
        -webkit-tap-highlight-color: transparent;
        /* Ensure base shadow is always present */
        box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.1), 
                    0px 2px 4px rgba(0, 0, 0, 0.15);
    }

    /* Reset any hover states */
    .circle-button:hover,
    .circle-button.primary:hover,
    #reset:hover {
        transform: none;
        background: initial;
        box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.1), 
                    0px 2px 4px rgba(0, 0, 0, 0.15);
    }

    /* Ensure primary buttons maintain their background color */
    .circle-button.primary {
        background: var(--primary-color);
    }

    /* Break mode specific reset */
    .break-mode .circle-button:hover,
    .break-mode #reset:hover {
        background-color: var(--break-surface);
    }

    /* Touch feedback */
    .circle-button:active,
    .circle-button.touch-active {
        transform: translateY(-1px);
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.15), 
                    0px 3px 6px rgba(0, 0, 0, 0.2);
        transition: all 0.05s ease;  /* Faster transition */
    }

    /* Start and Add-time button touch states */
    body:not(.break-mode) #start:active,
    body:not(.break-mode) #start.touch-active {
        background-color: var(--primary-hover);
        color: var(--white);
    }

    body:not(.break-mode) #start {
        background-color: var(--primary-color);
    }

    body:not(.break-mode) #add-time:active,
    body:not(.break-mode) #add-time.touch-active {
        background-color: var(--primary-hover);
        color: var(--white);
    }

    /* Toggle-mode button touch states - work mode only */
    body:not(.break-mode) #toggle-mode:active,
    body:not(.break-mode) #toggle-mode.touch-active {
        background-color: var(--primary-hover);
        color: var(--white);
    }

    /* Reset button touch states */
    #reset:active,
    #reset.touch-active {
        background-color: var(--primary-hover);
        color: var(--white);
    }

    /* Break mode touch states */
    .break-mode .circle-button:active,
    .break-mode .circle-button.touch-active {
        background-color: var(--break-surface-hover);
    }

    /* Break mode reset button touch states */
    .break-mode #reset:active,
    .break-mode #reset.touch-active {
        background-color: var(--danger-color);
        color: var(--white);
    }

    /* Break mode start and add-time button touch states */
    .break-mode #start:active,
    .break-mode #start.touch-active,
    .break-mode #add-time:active,
    .break-mode #add-time.touch-active {
        background-color: var(--primary-hover);
        color: var(--white);
    }

    /* Break mode toggle-mode button touch states */
    .break-mode #toggle-mode:active,
    .break-mode #toggle-mode.touch-active {
        background-color: var(--break-surface-hover);
        color: var(--break-background);
    }

    /* Break Mode Styles */
    .break-mode #start {
        background-color: rgba(255, 255, 255, 0.8);
    }

    .break-mode .circle-button {
        /* Standardized base shadow for break mode on mobile */
        box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.25), 
                    0px 2px 4px rgba(0, 0, 0, 0.25);
    }

    .break-mode .circle-button:active,
    .break-mode .circle-button.touch-active {
        /* Standardized active shadow for break mode on mobile */
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.25), 
                    0px 3px 6px rgba(0, 0, 0, 0.25);
    }
}

/* Mobile Layout */
@media screen and (max-width: 768px) {
    .container {
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: 0 2rem;
    }

    .timer-container {
        margin: 0 auto;
        transform: translateY(-20vh);
    }

    .controls {
        position: fixed;
        bottom: 10vh;
        left: 0;
        right: 0;
        width: 100%;
        padding: 0 2rem;
        margin: 0;
    }
}

/* Alert Dialog Styles */
.alert-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.75);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
}

.alert-box {
    background: var(--white);
    padding: 32px;
    border-radius: 16px;
    text-align: center;
    max-width: 360px;
    width: 90%;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    transform: scale(0.95);
    transition: transform 0.2s ease-in-out;
}

.alert-message {
    margin: 0 0 24px 0;
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--text-primary);
    line-height: 1.3;
}

.alert-button {
    background: var(--primary-color);
    color: var(--white);
    border: none;
    padding: 16px 32px;
    border-radius: 12px;
    cursor: pointer;
    font-size: 1.125rem;
    font-weight: 600;
    transition: transform 0.1s ease-in-out, background 0.2s ease-in-out;
}

.alert-button:hover {
    transform: scale(1.02);
    background: var(--primary-hover);
}

/* Break mode alert styles */
.break-mode .alert-box {
    background: var(--white);
}

.break-mode .alert-message {
    color: var(--text-primary);
}

.break-mode .alert-button {
    background: var(--primary-color);
    color: var(--white);
}

.break-mode .alert-button:hover {
    background: var(--primary-hover);
}
